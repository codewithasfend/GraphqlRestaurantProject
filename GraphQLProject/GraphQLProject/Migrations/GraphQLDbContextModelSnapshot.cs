// <auto-generated />
using GraphQLProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQLProject.Migrations
{
    [DbContext(typeof(GraphQLDbContext))]
    partial class GraphQLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQLProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "appetizers.png",
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "maincourse.png",
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "dessert.png",
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "drinks.png",
                            Name = "Drinks"
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Spicy chicken wings served with blue cheese dip.",
                            ImageUrl = "chickenwings.jpeg",
                            Name = "Chicken Wings",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Grilled salmon fillet with a lemon dill sauce, accompanied by rice and asparagus.",
                            ImageUrl = "salmon.jpg",
                            Name = "Salmon",
                            Price = 17.989999999999998
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Decadent chocolate cake with a scoop of vanilla ice cream.",
                            ImageUrl = "chocolatecake.jpg",
                            Name = "Chocolate Cake",
                            Price = 6.9500000000000002
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Toasted baguette slices topped with diced tomatoes, garlic, basil, and balsamic glaze.",
                            ImageUrl = "bruschetta.jpg",
                            Name = "Bruschetta",
                            Price = 7.9900000000000002
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Creamy spinach and artichoke dip served with tortilla chips.",
                            ImageUrl = "spinachartichokedip.jpg",
                            Name = "Spinach Artichoke Dip",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Juicy grilled chicken breast served with garlic mashed potatoes and steamed vegetables.",
                            ImageUrl = "grilledchickenbreast.jpg",
                            Name = "Grilled Chicken Breast",
                            Price = 15.99
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Sauteed shrimp in a garlic butter sauce served over linguine pasta.",
                            ImageUrl = "shrimpscampi.jpg",
                            Name = "Shrimp Scampi",
                            Price = 19.989999999999998
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Creamy New York-style cheesecake with a graham cracker crust.",
                            ImageUrl = "cheesecake.jpg",
                            Name = "Cheesecake",
                            Price = 5.9900000000000002
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Homemade apple pie with a flaky crust and cinnamon-spiced filling.",
                            ImageUrl = "applepie.jpg",
                            Name = "Apple Pie",
                            Price = 4.9900000000000002
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Refreshing iced tea with a hint of lemon.",
                            ImageUrl = "icedtea.jpg",
                            Name = "Iced Tea",
                            Price = 2.9900000000000002
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Description = "Carbonated soft drink in various flavors.",
                            ImageUrl = "soda.jpg",
                            Name = "Soda",
                            Price = 1.99
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "John Doe",
                            Email = "johndoe@example.com",
                            PartySize = 2,
                            PhoneNumber = "555-123-4567",
                            ReservationDate = "9/24/2023 12:04:02 PM",
                            SpecialRequest = "No nuts in the dishes, please."
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "Jane Smith",
                            Email = "janesmith@example.com",
                            PartySize = 4,
                            PhoneNumber = "555-987-6543",
                            ReservationDate = "9/24/2023 12:04:02 PM",
                            SpecialRequest = "Gluten-free options required."
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "Michael Johnson",
                            Email = "michaeljohnson@example.com",
                            PartySize = 6,
                            PhoneNumber = "555-789-0123",
                            ReservationDate = "9/24/2023 12:04:02 PM",
                            SpecialRequest = "Celebrating a birthday."
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Menu", b =>
                {
                    b.HasOne("GraphQLProject.Models.Category", null)
                        .WithMany("Menus")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GraphQLProject.Models.Category", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
